{"version":3,"sources":["Components/Header/Header.module.css","Components/Register/Register.module.css","Components/Form/Form.module.css","Components/Login/Login.module.css","Components/Contacts/Contacts.module.css","Components/Filter/Filter.module.css","App.module.css","Components/User/User.module.css","Components/HomePage/HomePage.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","Components/Form/Form.js","Components/Contacts/Contacts.js","Components/Filter/Filter.js","redux/auth/auth-selector.js","redux/auth/auth-operation.js","Components/User/User.js","Components/Header/Header.js","Components/Login/Login.js","Components/Register/Register.js","Components/Route/pablic-route.js","Components/Route/private-route.js","Components/HomePage/HomePage.js","App.js","redux/contacts/contacts-reducer.js","redux/auth/auth-slice.js","redux/store.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilterValue","axios","defaults","baseURL","newContact","dispatch","a","actions","post","response","data","contactId","delete","get","getFilter","state","filter","getStateContacts","contacts","Form","submitMethod","value","useSelector","useDispatch","useState","name","setName","number","setNumber","id","setId","uniqId","uuidv4","handleClick","event","target","trim","resetState","className","s","Container","onSubmit","preventDefault","find","toLowerCase","toast","error","operations","Label","htmlFor","Input","type","pattern","title","required","onChange","Button","Contacts","contact","includes","useEffect","map","List","onClick","Filter","evt","action","getName","auth","user","getLoggedIn","isLoggedIn","getToken","token","tokenState","headers","common","Authorization","register","createAsyncThunk","userData","login","logout","checkUser","_","thunkApi","getState","User","Text","Header","loggedIn","MainNav","Home","Link","activeClassName","LinkActive","to","exact","Login","userInfo","email","password","Group","controlId","Control","placeholder","variant","Register","PablicRoute","children","altPath","props","LoggedIn","PrivateRoute","HomePage","App","console","log","path","Title","contactsReducer","createReducer","payload","filterReducer","authSlice","createSlice","initialState","extraReducers","fulfilled","persistConfig","key","storage","whitelist","rootReducer","combineReducers","persistReducer","componentReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.8eff9e46.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Header_Container__3N5l5\",\"Link\":\"Header_Link__vzCXh\",\"LinkActive\":\"Header_LinkActive__3YZwm\",\"MainNav\":\"Header_MainNav__2q42j\",\"Home\":\"Header_Home__JRILQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Register_Container__1Pgzk\",\"Label\":\"Register_Label__1r7ng\",\"Input\":\"Register_Input__3n3ox\",\"Button\":\"Register_Button__1pZvf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Form_Container__2LBkn\",\"Label\":\"Form_Label__1q0Y-\",\"Input\":\"Form_Input__29dvv\",\"Button\":\"Form_Button__Zkrc7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Login_Container__3uvfG\",\"Label\":\"Login_Label__2omGn\",\"Input\":\"Login_Input__1LTgI\",\"Button\":\"Login_Button__1Rxqo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"Contacts_List__2V3YO\",\"Button\":\"Contacts_Button__3WuIa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__1q_sH\",\"Input\":\"Filter_Input__2MQXK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"App_Title__2qxNr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"User_Button__224AO\",\"Text\":\"User_Text__1X8qq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"HomePage_Container__16Sp_\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactRequest = createAction('contacts/fetchContactRequest');\nconst fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nconst fetchContactError = createAction('contacts/fetchContactError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst changeFilterValue = createAction('contacts/changeFilterValue');\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilterValue,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n};\n\n// const getSubmitData = data => {\n//   return { type: actionTypes.SUBMIT, payload: data };\n// };\n// const handleDelete = data => {\n//   return {\n//     type: actionTypes.DELETE,\n//     payload: data,\n//   };\n// };\n// const changeFilterValue = value => {\n//   return {\n//     type: actionTypes.FILTER,\n//     payload: value,\n//   };\n// };\n\n//todo\n// import { createAction } from '@reduxjs/toolkit';\n\n// const addContactRequest = createAction('contacts/addContactRequest');\n// const addContactSuccess = createAction('contacts/addContactSuccess');\n// const addContactError = createAction('contacts/addContactError');\n\n// const getSubmitData = createAction('contacts/getSubmitData');\n// const handleDelete = createAction('contacts/handleDelete');\n// const changeFilterValue = createAction('contacts/changeFilterValue');\n\n// // eslint-disable-next-line import/no-anonymous-default-export\n// export default {\n//   addContactRequest,\n//   addContactSuccess,\n//   addContactError,\n//   getSubmitData,\n//   handleDelete,\n//   changeFilterValue,\n// };\n","import axios from 'axios';\nimport actions from './contacts-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst fetchContact = () => async dispatch => {\n  dispatch(actions.fetchContactRequest());\n  try {\n    const response = await axios.get('/contacts');\n    dispatch(actions.fetchContactSuccess(response.data));\n  } catch (error) {\n    dispatch(actions.addContactError(error));\n  }\n\n  // axios\n  //   .get('/contacts')\n  //   .then(response => {\n  //     return dispatch(actions.fetchContactSuccess(response.data));\n  //   })\n  //   .catch(error => {\n  //     return dispatch(actions.addContactError(error));\n  //   });\n};\n\nconst addContacts = newContact => async dispatch => {\n  dispatch(actions.addContactRequest(''));\n  try {\n    const response = await axios.post('/contacts', newContact);\n    dispatch(actions.addContactSuccess(response.data));\n  } catch (error) {\n    dispatch(actions.addContactError(error));\n  }\n  // axios\n  //   .post('/contacts', newContact)\n  //   .then(response => {\n  //     return dispatch(actions.addContactSuccess(response.data));\n  //   })\n  //   .catch(error => {\n  //     return dispatch(actions.addContactError(error));\n  //   });\n};\n\nconst deleteContact = contactId => async dispatch => {\n  dispatch(actions.deleteContactRequest());\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(actions.deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(actions.deleteContactError(error));\n  }\n\n  // axios.delete(`/contacts/${contactId}`).then(() => {\n  //   return dispatch(actions.deleteContactSuccess(contactId));\n  // });\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { addContacts, deleteContact, fetchContact };\n","export const getFilter = state => {\n  return state.filter;\n};\n\nexport const getStateContacts = state => {\n  return state.contacts;\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './Form.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport operations from '../../redux/contacts/contacts-operations';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getStateContacts } from '../../redux/contacts/contacts-selectors';\n\nconst Form = ({ submitMethod }) => {\n  Form.propTypes = {\n    submitMethod: PropTypes.func,\n  };\n  const value = useSelector(getStateContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [id, setId] = useState('');\n\n  const uniqId = uuidv4();\n\n  const handleClick = event => {\n    const { value, name, id } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value.trim());\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n    setId(id);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (value.find(state => state.name.toLowerCase() === name.toLowerCase())) {\n      resetState();\n      toast.error('Hey, this name always here!');\n      return;\n    }\n    dispatch(operations.addContacts({ name, number, id }));\n    resetState();\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('');\n    setId('');\n  };\n\n  return (\n    <div className={s.Container}>\n      <form className={s.Form} onSubmit={handleSubmit}>\n        <label className={s.Label} htmlFor={uniqId}>\n          Name\n          <input\n            className={s.Input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={handleClick}\n            id={uuidv4()}\n          />\n        </label>\n\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            className={s.Input}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleClick}\n            value={number}\n            id={uuidv4()}\n          />\n        </label>\n        <button type=\"submit\" className={s.Button}>\n          Отправить\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n\n// import { connect} from 'react-redux';\n// const mapDispatchToProp = dispatch => {\n//   return {\n//     submitMethod: ({ name, number, id }) =>\n//       dispatch(action.getSubmitData({ name, number, id })),\n//   };\n// };\n// export default connect(null, mapDispatchToProp)(Form);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport operations from '../../redux/contacts/contacts-operations';\n\nconst Contacts = () => {\n  const contacts = useSelector(({ contacts, filter }) => {\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n    return visibleContacts;\n  });\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(operations.fetchContact());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <ul>\n        {contacts &&\n          contacts.map(contact => {\n            return (\n              <li className={s.List} key={contact.id}>\n                {contact.name}: {contact.number}\n                <button\n                  className={s.Button}\n                  type=\"button\"\n                  onClick={() => {\n                    dispatch(operations.deleteContact(contact.id));\n                  }}\n                >\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Contacts;\n\nContacts.propTypes = {\n  contacts: PropTypes.array,\n  deleteFunction: PropTypes.func,\n};\n\n// import { connect } from 'react-redux';\n\n// const mapStateToProps = state => {\n//   const { contacts, filter } = state;\n//   const visibleContact = contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(filter.toLowerCase()),\n//   );\n\n//   return {\n//     contacts: visibleContact,\n//   };\n// };\n// const mapDispatchToProp = dispatch => {\n//   return {\n//     deleteFunction: id => {\n//       return dispatch(action.handleDelete(id));\n//     },\n//   };\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProp)(Contacts);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport action from '../../redux/contacts/contacts-actions';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.Label}>\n      Фильтр по имени:\n      <input\n        className={s.Input}\n        type=\"text\"\n        value={value}\n        onChange={evt => {\n          dispatch(action.changeFilterValue(evt.target.value));\n        }}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\n// import { connect } from 'react-redux';\n\n// const mapStateToProps = state => {\n//   return {\n//     value: state.filter,\n//   };\n// };\n\n// const mapDispatchToProp = dispatch => {\n//   return {\n//     onChange: evt => dispatch(action.changeFilterValue(evt.target.value)),\n//   };\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProp)(Filter);\n","export const getName = state => state.auth.user.name;\nexport const getLoggedIn = state => state.auth.isLoggedIn;\nexport const getToken = state => state.auth.token;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst tokenState = {\n  setToken(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  cleanToken() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const register = createAsyncThunk('auth/register', async userData => {\n  const { data } = await axios.post('/users/signup', userData);\n  tokenState.setToken(data.token);\n  return data;\n});\n\nexport const login = createAsyncThunk('auth/login', async userData => {\n  const { data } = await axios.post('/users/login', userData);\n  tokenState.setToken(data.token);\n  return data;\n});\n\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await axios.post('/users/logout');\n  tokenState.cleanToken();\n});\n\nexport const checkUser = createAsyncThunk(\n  'auth/checkUser',\n  async (_, thunkApi) => {\n    const token = thunkApi.getState().auth.token;\n    tokenState.setToken(token);\n    const { data } = await axios.get('/users/current');\n    return data;\n  },\n);\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getName } from '../../redux/auth/auth-selector';\nimport { logout } from '../../redux/auth/auth-operation';\nimport s from './User.module.css';\nexport const User = () => {\n  const user = useSelector(getName);\n  const dispatch = useDispatch();\n  const onClick = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <>\n      <p className={s.Text}> Welcome, {user} ! </p>\n      <button type=\"button\" className={s.Button} onClick={onClick}>\n        Exit\n      </button>\n    </>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { User } from '../User/User';\nimport { getLoggedIn } from '../../redux/auth/auth-selector';\nimport { useSelector } from 'react-redux';\nimport s from './Header.module.css';\n\nconst Header = () => {\n  const loggedIn = useSelector(getLoggedIn);\n  return (\n    <header className={s.Container}>\n      <nav>\n        <div className={s.MainNav}>\n          <div className={s.Home}>\n            <NavLink\n              className={s.Link}\n              activeClassName={s.LinkActive}\n              to=\"/\"\n              exact\n            >\n              Home\n            </NavLink>\n            {loggedIn && (\n              <NavLink\n                className={s.Link}\n                activeClassName={s.LinkActive}\n                to=\"/contacts\"\n                exact\n              >\n                Contacts\n              </NavLink>\n            )}\n          </div>\n          {!loggedIn && (\n            <div>\n              <NavLink\n                className={s.Link}\n                activeClassName={s.LinkActive}\n                to=\"/login\"\n                exact\n              >\n                Login\n              </NavLink>\n              <NavLink\n                className={s.Link}\n                activeClassName={s.LinkActive}\n                to=\"/register\"\n                exact\n              >\n                Register\n              </NavLink>\n            </div>\n          )}\n        </div>\n\n        {loggedIn && <User />}\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../redux/auth/auth-operation';\nimport s from './Login.module.css';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const onSubmit = event => {\n    event.preventDefault();\n    const userInfo = {\n      email: event.target.email.value,\n      password: event.target.password.value,\n    };\n    if (userInfo.email === '' || userInfo.password === '') {\n      toast.error('Input your data!');\n      return;\n    }\n    dispatch(login(userInfo));\n  };\n\n  return (\n    <div className={s.Container}>\n      <Form onSubmit={onSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label className={s.Label}>Email address</Form.Label>\n          <Form.Control\n            className={s.Input}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter email\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label className={s.Label}>Password</Form.Label>\n          <Form.Control\n            className={s.Input}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n          />\n        </Form.Group>\n\n        <Button className={s.Button} variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default Login;\n","import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/auth-operation';\nimport s from './Register.module.css';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const onSubmit = event => {\n    event.preventDefault();\n    const userInfo = {\n      name: event.target.name.value,\n      email: event.target.email.value,\n      password: event.target.password.value,\n    };\n\n    if (\n      userInfo.name === '' ||\n      userInfo.email === '' ||\n      userInfo.password === ''\n    ) {\n      toast.error('Input ALL your data!');\n      return;\n    }\n    dispatch(register(userInfo));\n  };\n\n  return (\n    <div className={s.Container}>\n      <Form onSubmit={onSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n          <Form.Label className={s.Label}>Name</Form.Label>\n          <Form.Control\n            className={s.Input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name\"\n          />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label className={s.Label}>Email address</Form.Label>\n          <Form.Control\n            className={s.Input}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter email\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label className={s.Label}>Password</Form.Label>\n          <Form.Control\n            className={s.Input}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n          />\n        </Form.Group>\n\n        <Button className={s.Button} variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default Register;\n","import { Redirect } from 'react-router';\nimport { useSelector } from 'react-redux';\nimport { getLoggedIn } from '../../redux/auth/auth-selector';\nimport { Route } from 'react-router-dom';\n\nexport const PablicRoute = ({ children, altPath, props }) => {\n  const LoggedIn = useSelector(getLoggedIn);\n  return (\n    <Route {...props}>{LoggedIn ? <Redirect to={altPath} /> : children}</Route>\n  );\n};\n","import { Redirect } from 'react-router';\nimport { useSelector } from 'react-redux';\nimport { getLoggedIn } from '../../redux/auth/auth-selector';\nimport { Route } from 'react-router-dom';\n\nexport const PrivateRoute = ({ children, altPath, props }) => {\n  const LoggedIn = useSelector(getLoggedIn);\n  return (\n    <Route {...props}>{LoggedIn ? children : <Redirect to={altPath} />}</Route>\n  );\n};\n","import React from 'react';\nimport s from './HomePage.module.css';\n\nexport const HomePage = () => {\n  return (\n    <div className={s.Container}>\n      Welcome to PhoneBook App! Please, log in or register\n    </div>\n  );\n};\n","import React from 'react';\nimport Form from './Components/Form/Form';\nimport Contacts from './Components/Contacts/Contacts';\nimport Filter from './Components/Filter/Filter';\nimport s from './App.module.css';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Header from './Components/Header/Header';\nimport { Route, Switch } from 'react-router';\nimport Login from './Components/Login/Login';\nimport Register from './Components/Register/Register';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { checkUser } from './redux/auth/auth-operation';\nimport { getToken } from './redux/auth/auth-selector';\nimport { PablicRoute } from './Components/Route/pablic-route';\nimport { PrivateRoute } from './Components/Route/private-route';\nimport { HomePage } from '../src/Components/HomePage/HomePage';\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const token = useSelector(getToken);\n  console.log(token);\n  useEffect(() => {\n    if (token === null) {\n      return;\n    }\n    dispatch(checkUser());\n  }, [dispatch, token]);\n\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n        <PrivateRoute exact path=\"/contacts\" altPath=\"/login\">\n          <>\n            <h1 className={s.Title}>PhoneBook</h1>\n            <Form />\n            <h2 className={s.Title}>Contacts</h2>\n            <Filter />\n            <Contacts />\n          </>\n        </PrivateRoute>\n\n        <PablicRoute path=\"/login\" altPath=\"/contacts\" exact>\n          <Login />\n        </PablicRoute>\n        <PablicRoute path=\"/register\" altPath=\"/contacts\" exact>\n          <Register />\n        </PablicRoute>\n      </Switch>\n\n      <ToastContainer />\n    </>\n  );\n};\n","// import { toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst contactsReducer = createReducer([], {\n  [actions.fetchContactSuccess]: (_, action) => {\n    return action.payload;\n  },\n  [actions.addContactSuccess]: (state, action) => {\n    // if (\n    //   state.find(\n    //     state => state.name.toLowerCase() === action.payload.name.toLowerCase(),\n    //   )\n    // ) {\n    //   toast.error('Hey, this name always here!');\n    //   return [...state];\n    // }\n    return [...state, action.payload];\n  },\n\n  [actions.deleteContactSuccess]: (state, action) => {\n    return state.filter(state => state.id !== action.payload);\n  },\n});\n\nconst filterReducer = createReducer('', {\n  [actions.changeFilterValue]: (_, action) => {\n    return action.payload;\n  },\n});\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { contactsReducer, filterReducer };\n\n// import actionTypes from './contacts-types';\n// const contacts = [];\n// const contactsReducer = (state = contacts, action) => {\n//   switch (action.type) {\n// case actionTypes.SUBMIT:\n//   if (\n//     state.find(\n//       state =>\n//         state.name.toLowerCase() === action.payload.name.toLowerCase(),\n//     )\n//   ) {\n//     toast.error('Hey, this name always here!');\n//     return [...state];\n//   }\n//   return [...state, action.payload];\n\n//     case actionTypes.DELETE:\n//       return state.filter(state => state.id !== action.payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = '';\n\n// const filterReducer = (state = filter, action) => {\n//   switch (action.type) {\n//     case actionTypes.FILTER:\n//       return action.payload;\n//     default:\n//       return state;\n//   }\n// };\n","import { createSlice } from '@reduxjs/toolkit';\nimport { register, login, logout, checkUser } from './auth-operation';\n\nconst initialState = {\n  user: { name: null, email: null },\n  isLoggedIn: false,\n  token: null,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [register.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [login.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [logout.fulfilled](state, _) {\n      state.token = null;\n      state.isLoggedIn = false;\n      state.user = { name: null, email: null };\n    },\n    [checkUser.fulfilled](state, { payload }) {\n      state.user = payload;\n      state.isLoggedIn = true;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { combineReducers } from 'redux';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport componentReducer from './contacts/contacts-reducer';\nimport storage from 'redux-persist/lib/storage';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport authSlice from './auth/auth-slice';\n\n// const myMiddleware = store => next => action => {\n//   console.log('My middleware');\n//   console.log(action);\n//   console.log(store.getState());\n// };\nconst persistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst rootReducer = combineReducers({\n  auth: persistReducer(persistConfig, authSlice),\n  contacts: componentReducer.contactsReducer,\n  filter: componentReducer.filterReducer,\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: [\n    ...getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n    // myMiddleware,\n  ],\n});\n\nlet persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n\n// eslint-disable-next-line import/no-anonymous-default-export\n// export default store;\n\n// import { createStore, applyMiddleware, combineReducers } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// const reducer = combineReducers({\n//   contacts: componentReducer.contactsReducer,\n//   filter: componentReducer.filterReducer,\n// });\n// const store = createStore(reducer, composeWithDevTools());\n\n//todo\n// import { combineReducers, applyMiddleware } from 'redux';\n// import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import componentReducer from './contacts/contacts-reducer';\n// import {\n//   persistStore,\n//   persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\n\n// const persistConfig = {\n//   key: 'contacts',\n//   storage,\n//   blacklist: ['filter'],\n// };\n\n// const rootReducer = combineReducers({\n//   contacts: componentReducer.contactsReducer,\n//   filter: componentReducer.filterReducer,\n// });\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// const store = configureStore({\n//   reducer: persistedReducer,\n//   devTools: process.env.NODE_ENV === 'development',\n//   middleware: getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n// });\n\n// const persistor = persistStore(store);\n// // eslint-disable-next-line import/no-anonymous-default-export\n// export default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}